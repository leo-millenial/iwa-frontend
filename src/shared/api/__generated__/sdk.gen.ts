// This file is auto-generated by @hey-api/openapi-ts
import {
  type Client,
  type Options as ClientOptions,
  type TDataShape,
  formDataBodySerializer,
} from "@hey-api/client-fetch";

import { client as _heyApiClient } from "./client.gen";
import type {
  AuthControllerLoginByPhoneData,
  AuthControllerLoginByPhoneResponse,
  AuthControllerLoginData,
  AuthControllerLoginResponse,
  AuthControllerRefreshTokensData,
  AuthControllerRefreshTokensResponse,
  AuthControllerRegisterData,
  AuthControllerRegisterResponse,
  CompanyControllerDeleteData,
  CompanyControllerDeleteResponse,
  CompanyControllerGetByIdData,
  CompanyControllerGetByIdResponse,
  CompanyControllerListData,
  CompanyControllerListResponse,
  CompanyControllerUpdateData,
  CompanyControllerUpdateResponse,
  FilesControllerGetFileData,
  FilesControllerUploadFileData,
  JobseekerControllerDeleteData,
  JobseekerControllerDeleteResponse,
  JobseekerControllerGetByIdData,
  JobseekerControllerGetByIdResponse,
  JobseekerControllerListData,
  JobseekerControllerListResponse,
  JobseekerControllerUpdateData,
  JobseekerControllerUpdateResponse,
  JobseekerControllerUploadPhotoData,
  JobseekerControllerUploadPhotoResponse,
  JobseekerControllerUploadVideoData,
  JobseekerControllerUploadVideoResponse,
  RegistrationControllerCompleteRegistrationData,
  RegistrationControllerCompleteRegistrationResponse,
  RegistrationControllerGetRegistrationStatusData,
  RegistrationControllerGetRegistrationStatusResponse,
  RegistrationControllerProcessStep2Data,
  RegistrationControllerProcessStep3Data,
  RegistrationControllerProcessStep5Data,
  RegistrationControllerSendSmsCodeData,
  RegistrationControllerStartRegistrationData,
  RegistrationControllerStartRegistrationError,
  RegistrationControllerStartRegistrationResponse,
  RegistrationControllerVerifySmsCodeData,
  ResumeControllerCreateData,
  ResumeControllerCreateResponse,
  ResumeControllerDeleteData,
  ResumeControllerDeleteResponse,
  ResumeControllerListData,
  ResumeControllerListResponse,
  ResumeControllerUpdateData,
  ResumeControllerUpdateResponse,
  SubscriptionAdminControllerCreateCompanySubscriptionData,
  SubscriptionAdminControllerCreateCompanySubscriptionResponse,
  SubscriptionAdminControllerDeleteSubscriptionData,
  SubscriptionAdminControllerDeleteSubscriptionResponse,
  SubscriptionAdminControllerGetAllSubscriptionsData,
  SubscriptionAdminControllerGetAllSubscriptionsResponse,
  SubscriptionAdminControllerGetSubscriptionByIdData,
  SubscriptionAdminControllerGetSubscriptionByIdResponse,
  SubscriptionAdminControllerUpdateSubscriptionData,
  SubscriptionAdminControllerUpdateSubscriptionResponse,
  SubscriptionControllerCreateData,
  SubscriptionControllerCreateResponse,
  SubscriptionControllerGetCurrentData,
  UserControllerListData,
  UserControllerListResponse,
  UserControllerMeData,
  UserControllerMeResponse,
  VacancyControllerCreateByCompanyIdData,
  VacancyControllerCreateByCompanyIdResponse,
  VacancyControllerCreateData,
  VacancyControllerCreateResponse,
  VacancyControllerDeleteData,
  VacancyControllerDeleteMultipleData,
  VacancyControllerDeleteMultipleResponse,
  VacancyControllerGetByCompanyIdData,
  VacancyControllerGetByCompanyIdResponse,
  VacancyControllerGetByIdData,
  VacancyControllerGetByIdResponse,
  VacancyControllerListData,
  VacancyControllerListResponse,
  VacancyControllerUpdateByCompanyIdData,
  VacancyControllerUpdateByCompanyIdResponse,
  VacancyControllerUpdateData,
  VacancyControllerUpdateResponse,
} from "./types.gen";
import {
  zAuthControllerLoginByPhoneResponse,
  zAuthControllerLoginResponse,
  zAuthControllerRefreshTokensResponse,
  zAuthControllerRegisterResponse,
  zCompanyControllerDeleteResponse,
  zCompanyControllerGetByIdResponse,
  zCompanyControllerListResponse,
  zCompanyControllerUpdateResponse,
  zJobseekerControllerDeleteResponse,
  zJobseekerControllerGetByIdResponse,
  zJobseekerControllerListResponse,
  zJobseekerControllerUpdateResponse,
  zJobseekerControllerUploadPhotoResponse,
  zJobseekerControllerUploadVideoResponse,
  zRegistrationControllerCompleteRegistrationResponse,
  zRegistrationControllerGetRegistrationStatusResponse,
  zRegistrationControllerStartRegistrationResponse,
  zResumeControllerCreateResponse,
  zResumeControllerDeleteResponse,
  zResumeControllerListResponse,
  zResumeControllerUpdateResponse,
  zSubscriptionAdminControllerCreateCompanySubscriptionResponse,
  zSubscriptionAdminControllerDeleteSubscriptionResponse,
  zSubscriptionAdminControllerGetAllSubscriptionsResponse,
  zSubscriptionAdminControllerGetSubscriptionByIdResponse,
  zSubscriptionAdminControllerUpdateSubscriptionResponse,
  zSubscriptionControllerCreateResponse,
  zUserControllerListResponse,
  zUserControllerMeResponse,
  zVacancyControllerCreateByCompanyIdResponse,
  zVacancyControllerCreateResponse,
  zVacancyControllerDeleteMultipleResponse,
  zVacancyControllerGetByCompanyIdResponse,
  zVacancyControllerGetByIdResponse,
  zVacancyControllerListResponse,
  zVacancyControllerUpdateByCompanyIdResponse,
  zVacancyControllerUpdateResponse,
} from "./zod.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏–º–µ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è) ‚úçÔ∏è
 */
export const authControllerRegister = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerRegisterData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    AuthControllerRegisterResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zAuthControllerRegisterResponse.parseAsync(data);
    },
    url: "/api/auth/register",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üîê
 */
export const authControllerLogin = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerLoginData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<AuthControllerLoginResponse, unknown, ThrowOnError>(
    {
      responseValidator: async (data) => {
        return await zAuthControllerLoginResponse.parseAsync(data);
      },
      url: "/api/auth/login",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    },
  );
};

/**
 * –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì≤
 */
export const authControllerLoginByPhone = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerLoginByPhoneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    AuthControllerLoginByPhoneResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zAuthControllerLoginByPhoneResponse.parseAsync(data);
    },
    url: "/api/auth/login-by-phone",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞ üîè
 * –û–±–Ω–æ–≤–ª—è–µ—Ç access –∏ refresh —Ç–æ–∫–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–µ–∫—É—â–∏–π refresh —Ç–æ–∫–µ–Ω
 */
export const authControllerRefreshTokens = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerRefreshTokensData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    AuthControllerRefreshTokensResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zAuthControllerRefreshTokensResponse.parseAsync(data);
    },
    url: "/api/auth/refresh",
    ...options,
  });
};

/**
 * –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—à–∞–≥ 1)
 */
export const registrationControllerStartRegistration = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerStartRegistrationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    RegistrationControllerStartRegistrationResponse,
    RegistrationControllerStartRegistrationError,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zRegistrationControllerStartRegistrationResponse.parseAsync(data);
    },
    url: "/api/registration/start",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Ç–æ—Ä–æ–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
export const registrationControllerProcessStep2 = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerProcessStep2Data, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    url: "/api/registration/full-name",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç—Ä–µ—Ç–∏–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
export const registrationControllerProcessStep3 = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerProcessStep3Data, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    url: "/api/registration/phone",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 */
export const registrationControllerSendSmsCode = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerSendSmsCodeData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    url: "/api/registration/send-sms",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (—à–∞–≥ 4)
 */
export const registrationControllerVerifySmsCode = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerVerifySmsCodeData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    url: "/api/registration/verify-sms",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—è—Ç—ã–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
export const registrationControllerProcessStep5 = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerProcessStep5Data, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    url: "/api/registration/send-data",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã
 */
export const registrationControllerCompleteRegistration = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerCompleteRegistrationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    RegistrationControllerCompleteRegistrationResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zRegistrationControllerCompleteRegistrationResponse.parseAsync(data);
    },
    url: "/api/registration/complete",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
export const registrationControllerGetRegistrationStatus = <ThrowOnError extends boolean = false>(
  options: Options<RegistrationControllerGetRegistrationStatusData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    RegistrationControllerGetRegistrationStatusResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zRegistrationControllerGetRegistrationStatusResponse.parseAsync(data);
    },
    url: "/api/registration/status/{sessionId}",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ üë§
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
 */
export const userControllerMe = <ThrowOnError extends boolean = false>(
  options?: Options<UserControllerMeData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<UserControllerMeResponse, unknown, ThrowOnError>({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zUserControllerMeResponse.parseAsync(data);
    },
    url: "/api/user/me",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π –∏ –∫–æ–º–ø–∞–Ω–∏–π üè¢üë•
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π –∏ –∫–æ–º–ø–∞–Ω–∏–π.
 */
export const userControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<UserControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<UserControllerListResponse, unknown, ThrowOnError>({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zUserControllerListResponse.parseAsync(data);
    },
    url: "/api/user/list",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π üìñ
 */
export const vacancyControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<VacancyControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    VacancyControllerListResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerListResponse.parseAsync(data);
    },
    url: "/api/vacancy/list",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é –ø–æ ID üÜî
 */
export const vacancyControllerGetById = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerGetByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    VacancyControllerGetByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerGetByIdResponse.parseAsync(data);
    },
    url: "/api/vacancy/{id}",
    ...options,
  });
};

/**
 * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é üìù
 */
export const vacancyControllerCreate = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerCreateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    VacancyControllerCreateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerCreateResponse.parseAsync(data);
    },
    url: "/api/vacancy/create",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é üîÑ
 */
export const vacancyControllerUpdate = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerUpdateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    VacancyControllerUpdateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerUpdateResponse.parseAsync(data);
    },
    url: "/api/vacancy/update/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é üóëÔ∏è
 */
export const vacancyControllerDelete = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerDeleteData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/api/vacancy/delete/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ üóëÔ∏è
 */
export const vacancyControllerDeleteMultiple = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerDeleteMultipleData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    VacancyControllerDeleteMultipleResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerDeleteMultipleResponse.parseAsync(data);
    },
    url: "/api/vacancy/by-company/{companyId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ ID –∫–æ–º–ø–∞–Ω–∏–∏ üè¢
 */
export const vacancyControllerGetByCompanyId = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerGetByCompanyIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    VacancyControllerGetByCompanyIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerGetByCompanyIdResponse.parseAsync(data);
    },
    url: "/api/vacancy/by-company/{companyId}",
    ...options,
  });
};

/**
 * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ üìù
 */
export const vacancyControllerCreateByCompanyId = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerCreateByCompanyIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    VacancyControllerCreateByCompanyIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerCreateByCompanyIdResponse.parseAsync(data);
    },
    url: "/api/vacancy/by-company/{companyId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é –∫–æ–º–ø–∞–Ω–∏–∏ üîÑ
 */
export const vacancyControllerUpdateByCompanyId = <ThrowOnError extends boolean = false>(
  options: Options<VacancyControllerUpdateByCompanyIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    VacancyControllerUpdateByCompanyIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zVacancyControllerUpdateByCompanyIdResponse.parseAsync(data);
    },
    url: "/api/vacancy/by-company/{companyId}/vacancy/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–∞–Ω–∏–π üìã
 */
export const companyControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<CompanyControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    CompanyControllerListResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zCompanyControllerListResponse.parseAsync(data);
    },
    url: "/api/companies/list",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ ID üîç
 */
export const companyControllerGetById = <ThrowOnError extends boolean = false>(
  options: Options<CompanyControllerGetByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    CompanyControllerGetByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zCompanyControllerGetByIdResponse.parseAsync(data);
    },
    url: "/api/companies/{id}",
    ...options,
  });
};

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞–∫–∞–Ω—Å–∏–∏ üîÑ
 */
export const companyControllerUpdate = <ThrowOnError extends boolean = false>(
  options: Options<CompanyControllerUpdateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    CompanyControllerUpdateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zCompanyControllerUpdateResponse.parseAsync(data);
    },
    url: "/api/companies/update/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ üóëÔ∏è
 */
export const companyControllerDelete = <ThrowOnError extends boolean = false>(
  options: Options<CompanyControllerDeleteData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    CompanyControllerDeleteResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zCompanyControllerDeleteResponse.parseAsync(data);
    },
    url: "/api/companies/delete/{id}",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è –ø–æ ID üë§
 */
export const jobseekerControllerGetById = <ThrowOnError extends boolean = false>(
  options: Options<JobseekerControllerGetByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    JobseekerControllerGetByIdResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerGetByIdResponse.parseAsync(data);
    },
    url: "/api/jobseeker/{id}",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π üìã
 */
export const jobseekerControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<JobseekerControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    JobseekerControllerListResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerListResponse.parseAsync(data);
    },
    url: "/api/jobseeker/list",
    ...options,
  });
};

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ üîÑ
 */
export const jobseekerControllerUpdate = <ThrowOnError extends boolean = false>(
  options: Options<JobseekerControllerUpdateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    JobseekerControllerUpdateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerUpdateResponse.parseAsync(data);
    },
    url: "/api/jobseeker/update/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è üóëÔ∏è
 */
export const jobseekerControllerDelete = <ThrowOnError extends boolean = false>(
  options: Options<JobseekerControllerDeleteData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    JobseekerControllerDeleteResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerDeleteResponse.parseAsync(data);
    },
    url: "/api/jobseeker/delete/{id}",
    ...options,
  });
};

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è üì∑
 */
export const jobseekerControllerUploadPhoto = <ThrowOnError extends boolean = false>(
  options: Options<JobseekerControllerUploadPhotoData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    JobseekerControllerUploadPhotoResponse,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerUploadPhotoResponse.parseAsync(data);
    },
    url: "/api/jobseeker/{id}/upload-photo",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è üé•
 */
export const jobseekerControllerUploadVideo = <ThrowOnError extends boolean = false>(
  options: Options<JobseekerControllerUploadVideoData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    JobseekerControllerUploadVideoResponse,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zJobseekerControllerUploadVideoResponse.parseAsync(data);
    },
    url: "/api/jobseeker/{id}/upload-video",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–∑—é–º–µ üìÑ
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—é–º–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
 */
export const resumeControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<ResumeControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    ResumeControllerListResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zResumeControllerListResponse.parseAsync(data);
    },
    url: "/api/resume/list",
    ...options,
  });
};

/**
 * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ä–µ–∑—é–º–µ üìù
 */
export const resumeControllerCreate = <ThrowOnError extends boolean = false>(
  options: Options<ResumeControllerCreateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    ResumeControllerCreateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zResumeControllerCreateResponse.parseAsync(data);
    },
    url: "/api/resume/create",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ä–µ–∑—é–º–µ üîÑ
 */
export const resumeControllerUpdate = <ThrowOnError extends boolean = false>(
  options: Options<ResumeControllerUpdateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    ResumeControllerUpdateResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zResumeControllerUpdateResponse.parseAsync(data);
    },
    url: "/api/resume/update/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ä–µ–∑—é–º–µ üóëÔ∏è
 */
export const resumeControllerDelete = <ThrowOnError extends boolean = false>(
  options: Options<ResumeControllerDeleteData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    ResumeControllerDeleteResponse,
    unknown,
    ThrowOnError
  >({
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    responseValidator: async (data) => {
      return await zResumeControllerDeleteResponse.parseAsync(data);
    },
    url: "/api/resume/delete/{id}",
    ...options,
  });
};

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
 * –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è
 */
export const subscriptionControllerCreate = <ThrowOnError extends boolean = false>(
  options: Options<SubscriptionControllerCreateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SubscriptionControllerCreateResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionControllerCreateResponse.parseAsync(data);
    },
    url: "/api/subscriptions/create",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è
 */
export const subscriptionControllerGetCurrent = <ThrowOnError extends boolean = false>(
  options?: Options<SubscriptionControllerGetCurrentData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
    url: "/api/subscriptions/current",
    ...options,
  });
};

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
 */
export const subscriptionAdminControllerCreateCompanySubscription = <
  ThrowOnError extends boolean = false,
>(
  options: Options<SubscriptionAdminControllerCreateCompanySubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SubscriptionAdminControllerCreateCompanySubscriptionResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionAdminControllerCreateCompanySubscriptionResponse.parseAsync(data);
    },
    url: "/api/adm/subscriptions/company",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π
 */
export const subscriptionAdminControllerGetAllSubscriptions = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<SubscriptionAdminControllerGetAllSubscriptionsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    SubscriptionAdminControllerGetAllSubscriptionsResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionAdminControllerGetAllSubscriptionsResponse.parseAsync(data);
    },
    url: "/api/adm/subscriptions/company/all",
    ...options,
  });
};

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
 * –£–¥–∞–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É ID
 */
export const subscriptionAdminControllerDeleteSubscription = <ThrowOnError extends boolean = false>(
  options: Options<SubscriptionAdminControllerDeleteSubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    SubscriptionAdminControllerDeleteSubscriptionResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionAdminControllerDeleteSubscriptionResponse.parseAsync(data);
    },
    url: "/api/adm/subscriptions/company/{id}",
    ...options,
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ ID
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É ID
 */
export const subscriptionAdminControllerGetSubscriptionById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<SubscriptionAdminControllerGetSubscriptionByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    SubscriptionAdminControllerGetSubscriptionByIdResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionAdminControllerGetSubscriptionByIdResponse.parseAsync(data);
    },
    url: "/api/adm/subscriptions/company/{id}",
    ...options,
  });
};

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–æ–¥–ø–∏—Å–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É ID
 */
export const subscriptionAdminControllerUpdateSubscription = <ThrowOnError extends boolean = false>(
  options: Options<SubscriptionAdminControllerUpdateSubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    SubscriptionAdminControllerUpdateSubscriptionResponse,
    unknown,
    ThrowOnError
  >({
    responseValidator: async (data) => {
      return await zSubscriptionAdminControllerUpdateSubscriptionResponse.parseAsync(data);
    },
    url: "/api/adm/subscriptions/company/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç –µ–≥–æ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç—å—é
 */
export const filesControllerUploadFile = <ThrowOnError extends boolean = false>(
  options: Options<FilesControllerUploadFileData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
    ...formDataBodySerializer,
    url: "/api/files/upload",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ ID
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–π–ª –ø–æ –µ–≥–æ ID
 */
export const filesControllerGetFile = <ThrowOnError extends boolean = false>(
  options: Options<FilesControllerGetFileData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
    url: "/api/files/{fileId}",
    ...options,
  });
};
